{"version":3,"file":"static/js/879.ff719322.chunk.js","mappings":"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","sources":["components/styles/Container.styled.js","components/styles/Section.styled.js","components/styles/ProjectsPage.styled.js","components/styles/Card.styled.js","components/Card.jsx","components/styles/Filter.styled.js","data/options.js","components/Filter.jsx","pages/Projects.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    min-width: 270px;\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n \r\n    @media screen and (min-width: 768px) {\r\n        padding: 0 30px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        // width: 1280px;\r\n        padding: 0 40px;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n    padding: 40px 0;\r\n`;","import styled from 'styled-components';\r\n\r\n\r\nexport const Title = styled.h1`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    line-height: 1.14;\r\n    letter-spacing: 0.02em;\r\n    background: var(--bgd-header);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    margin-bottom: 10px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 24px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 28px;    \r\n    }\r\n`;\r\n\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: -20px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Item = styled.li`\r\n    background-color: #fff;\r\n    margin: 20px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        width: calc((100% - 4 * 20px) / 2); \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        width: calc((100% - 6 * 20px) / 3);    \r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n    display: grid;\r\n    gap: 10px;\r\n   \r\n    @media screen and (min-width: 768px) {\r\n        grid-auto-rows: 20px 70px 20px 50px 20px 20px 20px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        grid-auto-rows: 20px 80px 20px 40px 20px 20px 20px;   \r\n    }\r\n`;\r\n\r\nconst text = `\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 1.2;\r\n    letter-spacing: 0.02em;\r\n    color: var(--text-color);\r\n    text-align: justify;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 14px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 16px;    \r\n    }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n    ${text}\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    ${text}\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    display: inline-block;\r\n    ${text}\r\n    font-weight: 600;\r\n    margin-bottom: 10px;\r\n    background: var(--bgd-header);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    position: relative;\r\n    margin-bottom: 0;\r\n\r\n    &::after {\r\n        position: absolute;\r\n        display: block;\r\n        content: '';\r\n        bottom: -2;\r\n        left: 50%;\r\n        width: 0;\r\n        height: 2px;\r\n        background: var(--bgd-header);   \r\n        transition: width 0.3s ease 0s, left 0.3s ease 0s; \r\n    }\r\n\r\n        &:hover:after,\r\n        &:focus:after {\r\n            width: 100%; \r\n            left: 0; \r\n        }\r\n`;\r\n\r\n","import { Item, Wrapper, Title, Link, Description } from './styles/Card.styled';\r\n\r\n\r\nconst Card = ({id, image, title, description, type, technologies, github, livePage}) => {\r\n  return (\r\n    <>\r\n      <Item key={id}>\r\n          <img src={image} alt={title} />\r\n          <Wrapper>\r\n          <Title>Title: <Description>{title}</Description></Title>\r\n          <Title>Description: <Description>{description}</Description></Title>\r\n          <Title>Project type: <Description>{type}</Description></Title>\r\n          <Title>Stack: <Description>{technologies.join(', ')}</Description></Title>\r\n          {github ? <Title><Link href={github} rel=\"noopener noreferrer nofollow\" target='_blank' aria-label=\"link to Github\" onClick={(e) => e.target.blur()}>Link to Github</Link></Title> : <Title>Link to Github: <Description>not available</Description></Title>}\r\n          <Title><Link href={livePage} rel=\"noopener noreferrer nofollow\" target='_blank' aria-label=\"link to Live page\" onClick={(e) => e.target.blur()}>Link to live page</Link></Title>\r\n          </Wrapper>\r\n        </Item>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\nimport Select  from 'react-select';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n    \r\n    @media screen and (min-width: 768px) {\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const StyledSelect = styled(Select)`\r\n    max-width: 300px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        width: 300px;\r\n    }\r\n`;\r\n\r\nexport const FilterTitle = styled.p`\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 1.14;\r\n    letter-spacing: 0.02em;\r\n    color: var(--text-color);\r\n    margin-bottom: 10px;\r\n\r\n        @media screen and (min-width: 768px) {\r\n            font-size: 16px;\r\n        }\r\n\r\n        @media screen and (min-width: 1280px) {\r\n            font-size: 18px;    \r\n        }\r\n`;\r\n\r\n","export const options = [\r\n    {value: 'All', label: 'All'},\r\n    {value: 'Axios', label: 'Axios'},\r\n    {value: 'Bootstrap', label: 'Bootstrap'},\r\n    {value: 'Date-fns', label: 'Date-fns'},\r\n    {value: 'Datepicker', label: 'Datepicker'},\r\n    {value: 'Emotion', label: 'Emotion'},\r\n    {value: 'Formik', label: 'Formik'},\r\n    {value: 'Helmet', label: 'Helmet'},\r\n    {value: 'HTML', label: 'HTML'},\r\n    {value: 'i18n', label: 'i18n'},\r\n    {value: 'JavaScript', label: 'JavaScript'},\r\n    {value: 'MockApi', label: 'MockApi'},\r\n    {value: 'Node', label: 'Node'},\r\n    {value: 'Parcel', label: 'Parcel'},\r\n    {value: 'React', label: 'React'},\r\n    {value: 'React-countup', label: 'React-countup'},\r\n    {value: 'React-router-dom', label: 'React-router-dom'},\r\n    {value: 'React-toastify', label: 'React-toastify'},\r\n    {value: 'Redux', label: 'Redux'},\r\n    {value: 'SCSS', label: 'SCSS'},\r\n    {value: 'Spinner', label: 'Spinner'},\r\n    {value: 'Swiper', label: 'Swiper'},\r\n    {value: 'Typeform', label: 'Typeform'},\r\n    {value: 'Yup', label: 'Yup'},\r\n]","import { Wrapper, FilterTitle, StyledSelect } from './styles/Filter.styled';\r\nimport {options} from '../data/options';\r\n\r\nconst Filter = ({ onChange }) => {\r\n\r\n  const colorStyles = {\r\n    option: (styles, { isFocused, isSelected }) => ({\r\n      ...styles,\r\n      background: isSelected ? 'linear-gradient(-45deg, #9925ea, #338aff, #9925ea)' : isFocused ? '#80b6ff' : 'white',\r\n    }),\r\n    control: (provided, {isFocused}) => ({\r\n      ...provided,\r\n      border: isFocused ? \"1px solid #9925ea\" : \"1px solid #cccccc\",\r\n      \"&:hover\": {\r\n        border: \"1px solid  #338aff\",\r\n        boxShadow: \"0px 0px 6px #9925ea\",\r\n      },\r\n    }),\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n     <FilterTitle>Filter projects by technologies and libraries</FilterTitle>\r\n      <StyledSelect options={options} onChange={onChange} styles={colorStyles}/>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\r\nimport { Section } from '../components/styles/Section.styled';\r\nimport { Container } from '../components/styles/Container.styled';\r\nimport { List, Title } from '../components/styles/ProjectsPage.styled';\r\n\r\nimport Projects from '../data/projects.json';\r\nimport Card from '../components/Card';\r\nimport Filter from '../components/Filter';\r\n\r\n\r\nconst Project = () => {\r\n  const [item, setItem ] = useState(Projects);\r\n\r\n const filteredItems = (options) => {\r\n  const newItems = Projects.filter((val) => val.technologies.includes(options.value))\r\n  setItem(newItems);\r\n\r\n  if(options.value === 'All') {\r\n    setItem(Projects);\r\n  }\r\n }\r\n\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n      <Title>Projects</Title>\r\n      <Filter onChange={filteredItems}/>\r\n\r\n      <List> \r\n      {item.map(({id, title, image, description, type, technologies, github, livePage}) => (\r\n          <Card id={id} image={image} title={title} description={description} type={type} technologies={technologies} github={github} livePage={livePage}/>\r\n        ))}  \r\n      </List> \r\n     \r\n    </Container>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default Project\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Section","section","Title","h1","List","ul","_templateObject2","Item","li","Wrapper","text","p","_templateObject3","Description","span","_templateObject4","Link","a","_templateObject5","_ref","id","image","title","description","type","technologies","github","livePage","_jsx","_Fragment","children","_jsxs","src","alt","join","href","rel","target","onClick","e","blur","StyledSelect","Select","FilterTitle","options","value","label","onChange","styles","option","_ref2","isFocused","isSelected","background","control","provided","_ref3","border","boxShadow","Project","item","setItem","useState","Projects","Filter","newItems","filter","val","includes","map","Card"],"sourceRoot":""}