{"version":3,"file":"static/js/601.afc0bee7.chunk.js","mappings":"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","sources":["components/styles/Container.styled.js","components/styles/Section.styled.js","components/styles/ProjectsPage.styled.js","components/styles/Card.styled.js","components/Card.jsx","components/styles/Filter.styled.js","components/Filter.jsx","pages/Projects.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    min-width: 270px;\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n \r\n    @media screen and (min-width: 768px) {\r\n        padding: 0 30px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        // width: 1280px;\r\n        padding: 0 40px;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n    padding: 40px 0;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: -20px;\r\n  \r\n`;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Item = styled.li`\r\n    width: 100%;\r\n    margin: 20px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        width: calc((100% - 4 * 20px) / 2); \r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        width: calc((100% - 6 * 20px) / 3);    \r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n    background-color: #fff;\r\n`;\r\n\r\nconst text = `\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 1.2;\r\n    letter-spacing: 0.02em;\r\n    color: var(--text-color);\r\n    text-align: justify;\r\n    margin-bottom: 10px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 14px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 16px;    \r\n    }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n    ${text}\r\n    font-weight: 600;\r\n\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    ${text}\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    display: inline-block;\r\n    ${text}\r\n    font-weight: 600;\r\n    margin-bottom: 10px;\r\n    background: var(--bgd-header);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    position: relative;\r\n\r\n    &::after {\r\n        position: absolute;\r\n        display: block;\r\n        content: '';\r\n        bottom: -2;\r\n        left: 50%;\r\n        width: 0;\r\n        height: 2px;\r\n        background: var(--bgd-header);   \r\n        transition: width 0.3s ease 0s, left 0.3s ease 0s; \r\n    }\r\n\r\n        &:hover:after,\r\n        &:focus:after {\r\n            width: 100%; \r\n            left: 0; \r\n        }\r\n`;","import { Item, Wrapper, Title, Link, Description} from './styles/Card.styled';\r\n\r\n\r\nconst Card = ({id, image, title, description, type, technologies, github, livePage}) => {\r\n  return (\r\n    <>\r\n      <Item key={id}>\r\n          <img src={image} alt={title} />\r\n          <Wrapper>\r\n          <Title>Title: <Description>{title}</Description></Title>\r\n          <Title>Description: <Description>{description}</Description></Title>\r\n          <Title>Project type: <Description>{type}</Description></Title>\r\n          <Title>Stack: <Description>{technologies.join(', ')}</Description></Title>\r\n          {github ? <Link href={github} rel=\"noopener noreferrer nofollow\" target='_blank' aria-label=\"link to Github\" onClick={(e) => e.target.blur()}>Link to Github</Link> : <Title>Link to Github: <Description>not available</Description></Title>}\r\n          <Title><Link href={livePage} rel=\"noopener noreferrer nofollow\" target='_blank' aria-label=\"link to Live page\" onClick={(e) => e.target.blur()}>Link to live page</Link></Title>\r\n          </Wrapper>\r\n        </Item>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\n\r\nconst text = `\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 1.14;\r\n    letter-spacing: 0.02em;\r\n    color: var(--text-color);\r\n    margin-bottom: 10px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n\r\n    @media screen and (min-width: 1280px) {\r\n        font-size: 18px;    \r\n    }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n\r\nexport const FilterTitle = styled.p`\r\n    ${text}\r\n`","import { Wrapper, FilterTitle} from './styles/Filter.styled';\r\n\r\n\r\nconst Filter = ({onChange, value}) => {\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n     <FilterTitle>Filter by Technologies and libraries</FilterTitle>\r\n      <select onChange={onChange} value={value}>\r\n      <option value=\"All\">All</option>\r\n      <option value=\"HTML\">HTML</option>\r\n      <option value=\"JavaScript\">JavaScript</option>\r\n      <option value=\"React\">React</option>\r\n      <option value=\"CSS\">CSS</option>\r\n      <option value=\"SCSS\">SCSS</option>\r\n      </select>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\nimport { Section } from '../components/styles/Section.styled';\r\nimport { Container } from '../components/styles/Container.styled';\r\nimport { List } from '../components/styles/ProjectsPage.styled';\r\n\r\nimport projects from '../data/projects.json';\r\nimport Card from '../components/Card';\r\nimport Filter from '../components/Filter';\r\n\r\n\r\n\r\nconst Project = () => {\r\n  const [searchValue, setSearchValue] = useState(null);\r\n  const [filteredItems, setFilteredItems] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const matchingItems = searchValue \r\n        ? projects.filter((project) => project.technologies.includes(searchValue))\r\n        : projects;\r\n    setFilteredItems(matchingItems);\r\n    if(searchValue === 'All') {\r\n      setFilteredItems(projects)\r\n    }\r\n}, [searchValue]);\r\n\r\n const handleChange = (e) => {\r\n  setSearchValue(e.target.value);\r\n};\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n      <h1>Projects</h1>\r\n      <Filter onChange={handleChange} value={searchValue}/>\r\n      <List>\r\n        {(filteredItems ?? projects).map(({id, title, image, description, type, technologies, github, livePage}) => (\r\n          <Card id={id} image={image} title={title} description={description} type={type} technologies={technologies} github={github} livePage={livePage}/>\r\n        ))} \r\n      </List> \r\n    </Container>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default Project\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Section","section","List","ul","Item","li","Wrapper","_templateObject2","text","Title","p","_templateObject3","Description","span","_templateObject4","Link","a","_templateObject5","_ref","id","image","title","description","type","technologies","github","livePage","_jsx","_Fragment","children","_jsxs","src","alt","join","href","rel","target","onClick","e","blur","FilterTitle","onChange","value","Project","searchValue","setSearchValue","useState","filteredItems","setFilteredItems","useEffect","matchingItems","projects","filter","project","includes","Filter","map","Card"],"sourceRoot":""}